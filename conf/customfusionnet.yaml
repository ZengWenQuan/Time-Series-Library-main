# CustomFusionNet 配置文件 (v2, with adjustments in fusion module)

# 1. 训练设置
training_settings:
  targets: ['Teff', 'logg', 'FeH', 'CFe']
  loss_function: 'mse'
  loss_weights: [1.0, 1.0, 1.5, 1.2]
  lradj: 'cos'
  mixed_precision: True

# --- 分支与头模块选择 ---
normalized_branch_name: 'NormalizedSpectrumBranch' 
continuum_branch_name: 'ContinuumWaveletBranch'
fusion_name: 'FusionModule'
head_name: 'MultiTaskHead'

initialize_lazy: True

# --- 分支参数配置 (Original) ---
normalized_branch_config:
  pyramid_channels: [32, 32, 16]
  kernel_sizes: [3, 5, 7]
  pool_size: 2
  batch_norm: false
  use_attention: true
  attention_reduction: 4

continuum_branch_config:
  wavelet_name: 'db4'
  wavelet_levels: 2
  batch_norm: false
  cnn:
    layers:
      - {out_channels_per_path: 16, pool_size: 2}
      - {out_channels_per_path: 16, pool_size: 2}

# --- 融合模块参数配置 (with adjustments) ---
fusion_config:
  strategy: 'add'
  # Adjustment for normalized branch output before fusion
  adjustment_config_norm:
    out_channels: 64
    out_len: 600
  # Adjustment for continuum branch output before fusion
  adjustment_config_cont:
    out_channels: 64
    out_len: 600
  # Output channels after concat and 1x1 conv
  out_channels: &branch_c 64 # 64+64 -> 128

# 5. 预测头配置 (MultiTaskHead)
head_config:
  conv_pyramid:
    # concat策略, in_channels = C1+C2 = 64+64 = 128
    in_channels: *branch_c 
    layers:
      - {out_channels: 128, kernel_size: 3, pool_size: 2}
      - {out_channels: 64, kernel_size: 3, pool_size: 2}
  ffn_layers: [256, 128]
  dropout: 0.3